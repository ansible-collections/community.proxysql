---
- name: "{{ role_name }} | test_create_query_rule_in_memory_only | set current test"
  set_fact:
    current_test: test_create_query_rule_in_memory_only

- include_tasks: base_test.yml

### then
- name: verify test against proxysql >= 2
  when: PROXYSQL2
  block:
    - name: "{{ role_name }} | {{ current_test }} | check if create query rule reported a change"
      assert:
        that:
          - "status is {{ test_proxysql_query_rules_check_idempotence|ternary('not changed', 'changed') }}"

    - name: "{{ role_name }} | {{ current_test }} | confirm create query rule did make a change in memory"
      assert:
        that: memory_result.stdout == '{{ test_user }},{{ test_match_pattern }},{{ test_destination_hostgroup }},{{ test_active }},{{ test_retries }},{{ test_cache_ttl }},{{ test_cache_empty_result }},{{ test_multiplex }},{{ test_next_query_flagin }}'

    - name: "{{ role_name }} | {{ current_test }} | confirm create query rule didn't make a change on disk"
      assert:
        that: disk_result.stdout|length == 0

    - name: "{{ role_name }} | {{ current_test }} | confirm create query rule didn't make a change to runtime"
      assert:
        that: runtime_result.stdout|length == 0

- name: verify test against proxysql < 2
  when: not PROXYSQL2
  block:
    - name: "{{ role_name }} | {{ current_test }} | check if create query rule reported a change"
      assert:
        that:
          - "status1 is {{ test_proxysql_query_rules_check_idempotence|ternary('not changed', 'changed') }}"

    - name: "{{ role_name }} | {{ current_test }} | confirm create query rule did make a change in memory"
      assert:
        that: memory_result1.stdout == '{{ test_user }},{{ test_match_pattern }},{{ test_destination_hostgroup }},{{ test_active }},{{ test_retries }},{{ test_cache_ttl }},{{ test_multiplex }},{{ test_next_query_flagin }}'

    - name: "{{ role_name }} | {{ current_test }} | confirm create query rule didn't make a change on disk"
      assert:
        that: disk_result1.stdout|length == 0

    - name: "{{ role_name }} | {{ current_test }} | confirm create query rule didn't make a change to runtime"
      assert:
        that: runtime_result1.stdout|length == 0
### perform cleanup

- name: "{{ role_name }} | {{ current_test }} | ensure we're in a clean state when we finish"
  import_tasks: cleanup_test_query_rules.yml
  when: test_proxysql_query_rules_cleanup_after_test
